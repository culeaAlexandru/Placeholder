{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Licenta\\\\Proiect\\\\Placeholder\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  // State variables to store the username, password, and login status\n  const [loginUserName, setLoginUserName] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [loginStatus, setLoginStatus] = useState(\"\");\n  const [statusHolder, setstatusHolder] = useState(\"message\");\n\n  // State variable to track if the user is logged in\n  const [isLoggedIn, setIsLoggedIn] = useState();\n\n  // Function to navigate between pages\n  const navigate = useNavigate();\n\n  // Effect to check the login status when the component mounts\n  useEffect(() => {\n    const checkLoginStatus = async () => {\n      try {\n        // Send a request to the server to check login status\n        const response = await fetch(\"http://localhost:3002/\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        // Parse the response\n        const data = await response.json();\n        // Update isLoggedIn state based on response\n        setIsLoggedIn(data.valid && data.isVerified);\n      } catch (error) {\n        console.error(\"Error checking login status:\", error);\n      }\n    };\n    checkLoginStatus();\n  }, []); // Empty dependency array means this effect runs only once when component mounts\n\n  // Effect to navigate to home page when isLoggedIn changes\n  useEffect(() => {\n    if (isLoggedIn === true) {\n      navigate(\"/\");\n    }\n  }, [isLoggedIn, navigate]); // Re-run effect when isLoggedIn or navigate changes\n\n  // Function to handle user login\n  const loginUser = event => {\n    event.preventDefault();\n    // Send login request to server\n    axios.post(\"http://localhost:3002/login\", {\n      LoginUserName: loginUserName,\n      LoginPassword: loginPassword\n    }).then(response => {\n      // Handle response from server\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else if (!response.data.isVerified) {\n        setLoginStatus(\"User not verified\");\n      } else {\n        // Set isLoggedIn in local storage and navigate to home page\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        navigate(\"/\");\n      }\n    });\n  };\n\n  // Effect to display login status message\n  useEffect(() => {\n    if (loginStatus !== \"\") {\n      setstatusHolder(\"showMessage\");\n      setTimeout(() => {\n        setstatusHolder(\"message\");\n      }, 4000);\n    }\n  }, [loginStatus]); // Re-run effect when loginStatus changes\n\n  // Set axios to use credentials\n  axios.defaults.withCredentials = true;\n\n  // Render the login form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        className: \"page-title\",\n        children: \"Placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 input-box\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"username\",\n              className: \"form-control\",\n              id: \"username\",\n              autoComplete: \"off\",\n              placeholder: \"Username\",\n              onChange: event => {\n                setLoginUserName(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 input-box\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"password\",\n              autoComplete: \"off\",\n              placeholder: \"Password\",\n              onChange: event => {\n                setLoginPassword(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forgot\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"*\",\n                children: \"Forgot password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn-login\",\n              onClick: loginUser,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-text mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/register\",\n                className: \"link-register\",\n                children: \"Sign-up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: statusHolder,\n              children: loginStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"n3TyONVgwEUtwwJ7BcSSPTQ1ZBY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","loginUserName","setLoginUserName","loginPassword","setLoginPassword","loginStatus","setLoginStatus","statusHolder","setstatusHolder","isLoggedIn","setIsLoggedIn","navigate","checkLoginStatus","response","fetch","method","credentials","data","json","valid","isVerified","error","console","loginUser","event","preventDefault","post","LoginUserName","LoginPassword","then","message","localStorage","setItem","setTimeout","defaults","withCredentials","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","id","type","autoComplete","placeholder","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Licenta/Proiect/Placeholder/client/src/pages/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../Login.css\";\r\n\r\nexport default function Login() {\r\n  // State variables to store the username, password, and login status\r\n  const [loginUserName, setLoginUserName] = useState(\"\");\r\n  const [loginPassword, setLoginPassword] = useState(\"\");\r\n  const [loginStatus, setLoginStatus] = useState(\"\");\r\n  const [statusHolder, setstatusHolder] = useState(\"message\");\r\n\r\n  // State variable to track if the user is logged in\r\n  const [isLoggedIn, setIsLoggedIn] = useState();\r\n\r\n  // Function to navigate between pages\r\n  const navigate = useNavigate();\r\n\r\n  // Effect to check the login status when the component mounts\r\n  useEffect(() => {\r\n    const checkLoginStatus = async () => {\r\n      try {\r\n        // Send a request to the server to check login status\r\n        const response = await fetch(\"http://localhost:3002/\", {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n        });\r\n        // Parse the response\r\n        const data = await response.json();\r\n        // Update isLoggedIn state based on response\r\n        setIsLoggedIn(data.valid && data.isVerified);\r\n      } catch (error) {\r\n        console.error(\"Error checking login status:\", error);\r\n      }\r\n    };\r\n    checkLoginStatus();\r\n  }, []); // Empty dependency array means this effect runs only once when component mounts\r\n\r\n  // Effect to navigate to home page when isLoggedIn changes\r\n  useEffect(() => {\r\n    if (isLoggedIn === true) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [isLoggedIn, navigate]); // Re-run effect when isLoggedIn or navigate changes\r\n\r\n  // Function to handle user login\r\n  const loginUser = (event) => {\r\n    event.preventDefault();\r\n    // Send login request to server\r\n    axios\r\n      .post(\"http://localhost:3002/login\", {\r\n        LoginUserName: loginUserName,\r\n        LoginPassword: loginPassword,\r\n      })\r\n      .then((response) => {\r\n        // Handle response from server\r\n        if (response.data.message) {\r\n          setLoginStatus(response.data.message);\r\n        } else if (!response.data.isVerified) {\r\n          setLoginStatus(\"User not verified\");\r\n        } else {\r\n          // Set isLoggedIn in local storage and navigate to home page\r\n          localStorage.setItem(\"isLoggedIn\", \"true\");\r\n          navigate(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  // Effect to display login status message\r\n  useEffect(() => {\r\n    if (loginStatus !== \"\") {\r\n      setstatusHolder(\"showMessage\");\r\n      setTimeout(() => {\r\n        setstatusHolder(\"message\");\r\n      }, 4000);\r\n    }\r\n  }, [loginStatus]); // Re-run effect when loginStatus changes\r\n\r\n  // Set axios to use credentials\r\n  axios.defaults.withCredentials = true;\r\n\r\n  // Render the login form\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login\">\r\n        <a href=\"/\" className=\"page-title\">\r\n          Placeholder\r\n        </a>\r\n        <div className=\"wrapper\">\r\n          <form id=\"form\">\r\n            <h1>Login</h1>\r\n            <div className=\"mb-3 input-box\">\r\n              <input\r\n                type=\"username\"\r\n                className=\"form-control\"\r\n                id=\"username\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Username\"\r\n                onChange={(event) => {\r\n                  setLoginUserName(event.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3 input-box\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Password\"\r\n                onChange={(event) => {\r\n                  setLoginPassword(event.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div className=\"forgot\">\r\n                <a href=\"*\">Forgot password?</a>\r\n              </div>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <button type=\"submit\" className=\"btn-login\" onClick={loginUser}>\r\n                Login\r\n              </button>\r\n            </div>\r\n            <div className=\"register-text mb-3\">\r\n              <p>\r\n                Don't have an account?\r\n                <a href=\"/register\" className=\"link-register\">\r\n                  Sign-up\r\n                </a>\r\n              </p>\r\n              <span className={statusHolder}>{loginStatus}</span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}