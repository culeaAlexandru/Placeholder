{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Licenta\\\\Proiect\\\\Placeholder1\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Check if password and confirmPassword match\n    if (password !== confirmPassword) {\n      setErrorMessage(\"Password and confirm password do not match\");\n      setSuccessMessage(\"\");\n      return;\n    }\n    try {\n      const response = await fetch(\"/api/register\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password,\n          confirmPassword\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      if (data.status === \"error\") {\n        setSuccessMessage(\"\");\n        setErrorMessage(data.error);\n      } else {\n        setErrorMessage(\"\");\n        setSuccessMessage(data.success);\n        setTimeout(() => {\n          // Redirect or navigate to the desired page\n          window.location.href = \"/\";\n        }, 2000);\n      }\n    } catch (error) {\n      console.error(\"Error during registration:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign-Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-box\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              name: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-box\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Enter password\",\n              name: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-box\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm password\",\n              name: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\"\n            },\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 30\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"green\"\n            },\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-register\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-link\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/login\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"+ht2dhIoyJjpYsoU5wNxg/HEeYA=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegisterForm","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","response","fetch","method","body","JSON","stringify","headers","data","json","status","error","success","setTimeout","window","location","href","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","name","value","onChange","e","target","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Licenta/Proiect/Placeholder1/client/src/pages/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../Register.css\";\r\n\r\nconst RegisterForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Check if password and confirmPassword match\r\n    if (password !== confirmPassword) {\r\n      setErrorMessage(\"Password and confirm password do not match\");\r\n      setSuccessMessage(\"\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/register\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ email, password, confirmPassword }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.status === \"error\") {\r\n        setSuccessMessage(\"\");\r\n        setErrorMessage(data.error);\r\n      } else {\r\n        setErrorMessage(\"\");\r\n        setSuccessMessage(data.success);\r\n\r\n        setTimeout(() => {\r\n          // Redirect or navigate to the desired page\r\n          window.location.href = \"/\";\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during registration:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      <div className=\"register\">\r\n        <div className=\"wrapper\">\r\n          <h1>Sign-Up</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"input-box\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"input-box\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"input-box\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n                name=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            {errorMessage && <div style={{ color: \"red\" }}>{errorMessage}</div>}\r\n            {successMessage && (\r\n              <div style={{ color: \"green\" }}>{successMessage}</div>\r\n            )}\r\n            <button type=\"submit\" className=\"btn-register\">\r\n              Sign up\r\n            </button>\r\n          </form>\r\n          <div className=\"register-link\">\r\n            <p>\r\n              Already have an account? <a href=\"/login\">Log in</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}